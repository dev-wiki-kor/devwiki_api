plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
}

group 'com.dk0124.project'
version '0.0-SNAPSHOT'

sourceCompatibility = '17.0.9'
targetCompatibility = '17.0.9'

apply plugin: 'io.spring.dependency-management'

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

ext {
    set('springCloudVersion', "2022.0.3")
}

dependencyManagement {
    imports {
        "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {
    // spring dependency
    implementation('org.springframework.boot:spring-boot-starter-web')

    /**MYSQL**/
    // rdms
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'com.h2database:h2'


    /***QUERY DSL**/
    //query dsl
    implementation group: 'com.querydsl', name: 'querydsl-jpa', version: '5.0.0', classifier: 'jakarta'
    annotationProcessor group: 'com.querydsl', name: 'querydsl-apt', version: '5.0.0', classifier: 'jakarta'
    annotationProcessor group: 'jakarta.persistence', name: 'jakarta.persistence-api', version: '3.1.0'

    testImplementation group: 'com.querydsl', name: 'querydsl-jpa', version: '5.0.0', classifier: 'jakarta'
    testAnnotationProcessor group: 'com.querydsl', name: 'querydsl-apt', version: '5.0.0', classifier: 'jakarta'
    testAnnotationProcessor group: 'jakarta.persistence', name: 'jakarta.persistence-api', version: '3.1.0'

    /**SECURITY**/
    //spring security
    implementation "org.springframework.boot:spring-boot-starter-security"
    testImplementation 'org.springframework.security:spring-security-test'

    /***REDIS AND SESSION **/
    //redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    //embedded-redis
    implementation group: 'it.ozimov', name: 'embedded-redis', version: '0.7.2'
    //redis session
    implementation 'org.springframework.session:spring-session-data-redis'
    implementation 'org.redisson:redisson-spring-boot-starter:3.24.3'

    /**LOMBOK**/
    // lombok
    compileOnly 'org.projectlombok:lombok:1.18.30'
    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    /**API DOCS**/
    //swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

    /**TEST**/
    testCompileOnly 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    //fixture monkey
    testImplementation "com.navercorp.fixturemonkey:fixture-monkey-starter:1.0.12"
    testImplementation 'net.jqwik:jqwik:1.7.3'

    // wiremock
    /* testImplementation "com.github.tomakehurst:wiremock-standalone:2.19.0" */

    /**LOGGING**/
    // Logback Appender Discord
    implementation 'com.github.napstr:logback-discord-appender:1.0.0'
    implementation 'ch.qos.logback.contrib:logback-json-classic:0.1.2'
    implementation 'ch.qos.logback.contrib:logback-jackson:0.1.5'

    /**HTTP call **/
    // http 통신
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:4.1.0'

}

test {
    useJUnitPlatform()
}
